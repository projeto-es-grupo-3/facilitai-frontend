import { useContext, useEffect, useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';

// @components
import Header from '@/components/Header/Header';
import Footer from '@/components/Footer/Footer';
import Polygon from '@/components/Polygon/Polygon';
import Form from '@/components/Form/Form';
import SignUpForm from '@/components/SignUpForm/SignUpForm';

// @contents
import LoginContent from '@/contents/LoginContent';

// @contexts
import { AuthContext } from '@/contexts/AuthContext.js';

export default function Login() {

    const authContext = useContext(AuthContext);
    const router = useRouter();
    const [form, setForm] = useState(true);

    useEffect(() => {
        if (authContext.isUserAuthenticated()) {
            router.push("/dashboard")
        }
    }, [])

    const ChangeForm = () => {
        setForm(!form)
    }

    const SubmitSignIn = async (user, password) => {
        var form = {
            "username": user,
            "password": password
        }

        const res = await fetch(`${process.env.BACK_END_HOST}/login`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(form)
        })
       res.json().then((data) => {
        return data.access_token
        }).then((token) => {
            authContext.setAuthState({token,user})
        })
       
        router.push("/dashboard")
    }

    const SubmitSignUp = async (user, email, matriculation, campus, password, course) => {
        
        var form = {
            "username": user,
            "email": email,
            "matricula": matriculation,
            "campus": campus,
            "password": password,
            "curso": course
        }

        const res = await fetch(`${process.env.BACK_END_HOST}/register`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(form)
        });

        return res.status
    }

    return (
        <>
            <Head>
                <title>Login</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>
            <Polygon />
            <Header />
            <LoginContent>
                {
                    form ? <Form SubmitSignIn={SubmitSignIn} ChangeForm={ChangeForm} /> : <SignUpForm SubmitSignUp={SubmitSignUp} ChangeForm={ChangeForm} />
                }
            </LoginContent>
            <Footer />
        </>
    )
}